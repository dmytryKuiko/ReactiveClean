apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: "de.mannodermaus.android-junit5"

apply plugin: "com.vanniktech.dependency.graph.generator"

android {
    compileSdkVersion Versions.compileSdkVersion
    defaultConfig {
        applicationId "com.example.dimi.reactiveclean"
        minSdkVersion Versions.minSdkVersion
        targetSdkVersion Versions.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        debug {
            buildConfigField 'String', "API_KEY", ReactiveClean_newsApiKeyDecoded //for Code
            resValue 'string', "API_KEY", ReactiveClean_newsApiKeyDecoded
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField 'String', "API_KEY", ReactiveClean_newsApiKeyDecoded
            resValue 'string', "API_KEY", ReactiveClean_newsApiKeyDecoded
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

kapt {
    correctErrorTypes = true
}

sourceSets {
    main.java.srcDirs += [file("$buildDir/generated/source/kapt/main")]
}

android.testOptions {
    junitPlatform {
        filters {
            engines {
                include 'spek'
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation Dependencies.kotlinStdlib
    implementation Dependencies.appcompat
    implementation Dependencies.recyclerView
    implementation Dependencies.supportV4
    implementation Dependencies.supportDesign
    implementation Dependencies.supportCustomTabs
    implementation Dependencies.supportConstraintLayout
    testImplementation Dependencies.junit
    androidTestImplementation Dependencies.testRunner
    androidTestImplementation Dependencies.espresso

    //Hamcrest Matchers
    testImplementation Dependencies.hamcrest

    //Kotlin reflections
    implementation Dependencies.kotlinReflections

    //Mockito
    implementation Dependencies.mockito

    //LiveData and ViewModel
    implementation Dependencies.lifecycleExtensions

    //LifeCycles
    implementation Dependencies.lifecycleRuntime
    kapt Dependencies.lifecyclerCompiler

    //LiveData with ReactiveStreams
    implementation Dependencies.lifecycleReactiveStreams

    //LiveData testing
    testImplementation Dependencies.coreTesting

    //Room
    implementation Dependencies.roomRuntime

    //Room RxJava
    implementation Dependencies.roomRxJava2
    kapt Dependencies.roomCompiler


    //Leak canary
    debugImplementation Dependencies.leakCanaryAndroid
    releaseImplementation Dependencies.leakcanaryAndroiNoOp

    //Dagger
    implementation Dependencies.dagger
    implementation Dependencies.daggerAndroid
    kapt Dependencies.daggerCompiler
    kapt Dependencies.daggerAndroidProcessor

    //Rx
    implementation Dependencies.rxJava2RxAndroid
    implementation Dependencies.rxJava2RxJava

    //RxBindings
    implementation Dependencies.rxBinding2AppCompat
    implementation Dependencies.rxBinding2RxBinding
    implementation Dependencies.rxBinding2SupportV4
    implementation Dependencies.rxBinding2RecyclerView

    //RxRelay
    implementation Dependencies.rxRelay

    //Retrofit
    implementation Dependencies.retrofit
    implementation Dependencies.retrofitAdapter

    //GSON
    implementation Dependencies.gson
    implementation Dependencies.gsonConverter

    //OkHttp
    implementation Dependencies.okHttp
    implementation Dependencies.okHttpInterceptor

    //Timber
    implementation Dependencies.timber

    //Cicerone
    implementation Dependencies.cicerone

    //Picasso
    implementation Dependencies.picasso

    //AdapterDelegates
    implementation Dependencies.adapterDelegates

    //JodaTime
    implementation Dependencies.jodaTime

    //Spek
    testImplementation(Dependencies.spekApi) {
        exclude group: "org.jetbrains.kotlin"
    }
    testImplementation(Dependencies.spekJunitPlatform) {
        exclude group: "org.junit.platform"
        exclude group: "org.jetbrains.kotlin"
    }
    testImplementation Dependencies.kotlinReflections

    testImplementation junit5.unitTests()
    testCompileOnly junit5.unitTestsRuntime()
}